{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima\\\\Desktop\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\REACT \\u043F\\u043E\\u0433\\u043E\\u0434\\u0430\\\\cities\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"3a8da544d8a4a0eb8c99a262aad91b41\";\n\nclass Applica extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city === true) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Applica;","map":{"version":3,"sources":["C:\\Users\\Dima\\Desktop\\Обучение\\REACT погода\\cities\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","Applica","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","setState","main","name","sys","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE9B;AACJC,MAAAA,IAAI,EAAEC,SADF;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,OAAO,EAAEF,SAHL;AAIJG,MAAAA,OAAO,EAAEH,SAJL;AAKJI,MAAAA,MAAM,EAAEJ,SALJ;AAMJK,MAAAA,KAAK,EAAEL;AANH,KAF8B;;AAAA,SAYpCM,cAZoC,GAYnB,MAAOC,CAAP,IAAa;AAC5BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;;AAGA,UAAGV,IAAI,KAAI,IAAX,EAAgB;AACd,cAAMW,OAAO,GAAG,MAChBC,KAAK,6DAAsDZ,IAAtD,oBAAoEN,OAApE,mBADL;AAEA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,aAAKC,QAAL,CAAc;AACZjB,UAAAA,IAAI,EAAEe,IAAI,CAACG,IAAL,CAAUlB,IADJ;AAEZE,UAAAA,IAAI,EAAEa,IAAI,CAACI,IAFC;AAGZhB,UAAAA,OAAO,EAAEY,IAAI,CAACK,GAAL,CAASjB,OAHN;AAIZC,UAAAA,OAAO,EAAEW,IAAI,CAACK,GAAL,CAAShB,OAJN;AAKZC,UAAAA,MAAM,EAAEU,IAAI,CAACK,GAAL,CAASf,MALL;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AAQH;AACA,KA/BmC;AAAA;;AAgCpCe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKd,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADnB;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAJtB;AAKE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALrB;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AA/CmC;;AAiDtC,eAAeT,OAAf","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"3a8da544d8a4a0eb8c99a262aad91b41\";\n\nclass Applica extends React.Component {\n\n  state={\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    error: undefined\n    \n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    \n    \n    if(city=== true){\n      const api_url = await\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        error: \"\",\n      });\n  }\n  }\n  render() {\n    return (\n      <div>\n        <Info />\n        <Form weatherMethod={this.gettingWeather} />\n        <Weather \n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          error={this.state.error}\n           />\n      </div>\n    );\n  }\n}\nexport default Applica;\n"]},"metadata":{},"sourceType":"module"}