{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima\\\\Desktop\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\REACT \\u043F\\u043E\\u0433\\u043E\\u0434\\u0430\\\\cities\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"3a8da544d8a4a0eb8c99a262aad91b41\";\n\nclass Applica extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date(data.sys.sunset * 1000);\n        var hours = date.getHours();\n        var minutes = \"0\" + date.getMinutes();\n        var seconds = \"0\" + date.getSeconds();\n        date.setTime(sunset);\n        var sunset_date = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          error: \"Введите название города\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Applica;","map":{"version":3,"sources":["C:\\Users\\Dima\\Desktop\\Обучение\\REACT погода\\cities\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","Applica","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","setTime","sunset_date","substr","setState","main","name","pressure","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"3a8da544d8a4a0eb8c99a262aad91b41\";\n\nclass Applica extends React.Component {\n\n  state={\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    error: undefined\n    \n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    \n    \n    if(city){\n      const api_url = await\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      var sunset = data.sys.sunset;\n      var date = new Date(data.sys.sunset*1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var seconds = \"0\" + date.getSeconds();\n      date.setTime(sunset);\n      var sunset_date = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        pressure: data.main.pressure,\n        sunset: sunset_date,\n        error: undefined\n      });\n  }else{\n    this.setState({\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: \"Введите название города\"\n    });\n\n  }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-5\">\n                <Info />\n              </div>\n              <div className=\"col-xs-7\">\n              <Form weatherMethod={this.gettingWeather} />\n              <Weather \n                temp={this.state.temp}\n                city={this.state.city}\n                country={this.state.country}\n                pressure={this.state.pressure}\n                sunset={this.state.sunset}\n                error={this.state.error}\n              />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        \n        \n      </div>\n    );\n  }\n}\nexport default Applica;\n"]},"metadata":{},"sourceType":"module"}